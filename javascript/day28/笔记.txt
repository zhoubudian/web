2009年，W3C提出了一种新的方案—-Flex布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。

布局的传统解决方案，基于盒状模型，依赖 display属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。

传统CSS实现响应式的方法:
1.em,rem,%, box-sizing:border-box;
2.media query 媒体查询

一.flex 主要应用于移动端
flex功能: 实现各种页面的响应式布局,所有浏览器都支持!
Flex是Flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。
注意:设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。

二.基本概念
1.flex container: 指父级元素, 采用Flex布局的元素，称为Flex容器（flex container），简称”容器”。
2.flex item: 它的所有子元素自动成为容器成员，称为Flex项目（flex item），简称”项目”。
3. 水平的主轴（main axis）==> x轴(axix)
   main start: 主轴开始的位置,
   main end: 主轴结束的位置
4. 垂直的交叉轴（cross axis）==> y轴
   cross start: 交叉轴的开始位置
   cross end : 交叉轴的结束位置

备注:
容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。
项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。

row: 行, column: 列
三.容器属性
1.flex-direction: 项目的排列方向,(子元素沿main axis水平排列)。属性值:
row（默认值）：主轴为水平方向，起点在左端。
row-reverse：主轴为水平方向，起点在右端。
column：主轴为垂直方向，起点在上沿。
column-reverse：主轴为垂直方向，起点在下沿。

2.flex-wrap属性
默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，
如何换行。属性值:
nowrap（默认）：不换行。
wrap：换行，第一行在上方。
wrap-reverse：换行，第一行在下方

3.flex-flow
flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap
flex-flow: <flex-direction> || <flex-wrap>;

4. justify-content属性
justify-content属性定义了项目在主轴上的对齐方式。
属性值:
flex-start（默认值）：左对齐
flex-end：右对齐
center： 居中
*space-between：两端对齐，项目之间的间隔都相等。
*space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。

5. align-items属性
align-items属性定义项目在交叉轴上如何对齐。
flex-start：交叉轴的起点对齐。
flex-end：交叉轴的终点对齐。
center：交叉轴的中点对齐。
baseline: 项目的第一行文字的基线对齐。
stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。stretch(伸展)

6. align-content属性
align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。
flex-start：与交叉轴的起点对齐。
flex-end：与交叉轴的终点对齐。
center：与交叉轴的中点对齐。
space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。
space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。
stretch（默认值）：轴线占满整个交叉轴。